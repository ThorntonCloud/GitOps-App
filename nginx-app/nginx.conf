worker_processes auto;
error_log /dev/stderr warn;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # JSON-formatted access logs for better observability
    log_format json_combined escape=json
        '{'
        '"time":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request_method":"$request_method",'
        '"request_uri":"$request_uri",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"request_time":$request_time,'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
        '}';

    access_log /dev/stdout json_combined;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    gzip on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # GitOps metadata header
    add_header X-GitOps-Demo "true" always;

    server {
        listen 8080;
        server_name _;

        root /usr/share/nginx/html;
        index index.html;

        # Main application
        location / {
            try_files $uri $uri/ =404;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Version info endpoint (exposed for GitOps visibility)
        location /.version.json {
            add_header Content-Type application/json;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Metrics stub for Prometheus-style monitoring
        location /metrics {
            access_log off;
            return 200 "# HELP nginx_up Nginx is running\n# TYPE nginx_up gauge\nnginx_up 1\n";
            add_header Content-Type text/plain;
        }

        # Custom error pages
        error_page 404 /errors/404.html;
        error_page 500 502 503 504 /errors/50x.html;

                # Location block for error pages (prevents redirect loops)
        location ^~ /errors/ {
            internal;
            root /usr/share/nginx/html;
        }
    }
}